package jaxb.marketplace.com.brightstar.marketplace.svcs;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.1.4
 * 2016-02-08T12:28:13.478+05:30
 * Generated source version: 3.1.4
 * 
 */
@WebServiceClient(name = "OrderManagementService", 
                  wsdlLocation = "file:/C:/Users/satish-s/workspace/SoapConsumeTest/src/main/resources/wsdl/marketplace.wsdl",
                  targetNamespace = "http://svcs.marketplace.brightstar.com/") 
public class OrderManagementService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://svcs.marketplace.brightstar.com/", "OrderManagementService");
    public final static QName OrderManagementServiceSoap12 = new QName("http://svcs.marketplace.brightstar.com/", "OrderManagementServiceSoap12");
    public final static QName OrderManagementServiceSoap = new QName("http://svcs.marketplace.brightstar.com/", "OrderManagementServiceSoap");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/satish-s/workspace/SoapConsumeTest/src/main/resources/wsdl/marketplace.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(OrderManagementService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/satish-s/workspace/SoapConsumeTest/src/main/resources/wsdl/marketplace.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public OrderManagementService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public OrderManagementService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public OrderManagementService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public OrderManagementService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public OrderManagementService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public OrderManagementService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns OrderManagementServiceSoap
     */
    @WebEndpoint(name = "OrderManagementServiceSoap12")
    public OrderManagementServiceSoap getOrderManagementServiceSoap12() {
        return super.getPort(OrderManagementServiceSoap12, OrderManagementServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OrderManagementServiceSoap
     */
    @WebEndpoint(name = "OrderManagementServiceSoap12")
    public OrderManagementServiceSoap getOrderManagementServiceSoap12(WebServiceFeature... features) {
        return super.getPort(OrderManagementServiceSoap12, OrderManagementServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns OrderManagementServiceSoap
     */
    @WebEndpoint(name = "OrderManagementServiceSoap")
    public OrderManagementServiceSoap getOrderManagementServiceSoap() {
        return super.getPort(OrderManagementServiceSoap, OrderManagementServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OrderManagementServiceSoap
     */
    @WebEndpoint(name = "OrderManagementServiceSoap")
    public OrderManagementServiceSoap getOrderManagementServiceSoap(WebServiceFeature... features) {
        return super.getPort(OrderManagementServiceSoap, OrderManagementServiceSoap.class, features);
    }

}
