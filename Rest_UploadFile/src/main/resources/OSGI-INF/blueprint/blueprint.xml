<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
    xmlns:cxf="http://cxf.apache.org/blueprint/core"
    xsi:schemaLocation="
      http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
      http://cxf.apache.org/blueprint/jaxrs http://cxf.apache.org/schemas/blueprint/jaxrs.xsd
      http://cxf.apache.org/blueprint/core http://cxf.apache.org/schemas/blueprint/core.xsd">

    <!--
      The <jaxrs:server/> element sets up our JAX-RS services.  It defines:
      - the server's address, '/crm', relative to the default CXF servlet URI
        with the default settings, the server will be running on 'http://localhost:8181/cxf/crm'
      - a list of service beans
        in this example, we refer to another bean defined in this Blueprint XML file with a <ref/> element
    -->
    <jaxrs:server id="customerService" address="/crm">
        <jaxrs:serviceBeans>
            <ref component-id="customerSvc"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
           <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </jaxrs:providers>
    </jaxrs:server>
 
    <cxf:bus>
        <cxf:features>
          <cxf:logging />
        </cxf:features>
    </cxf:bus>


    <!--
      We are using the OSGi Blueprint XML syntax to define a bean that we referred to in our JAX-RS server setup.
      This bean carries a set of JAX-RS annotations that allow its methods to be mapped to incoming requests.
    -->
    <bean id="customerSvc" class="com.mycompany.rest.file.upload.CustomerService"/>

</blueprint>
